{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\varun\\\\Desktop\\\\Projects\\\\Github_Page\\\\varunan-vara.github.io\\\\src\\\\Content-Elements\\\\DropDownNav.tsx\",\n    _s = $RefreshSig$();\n\n// A dropdown menu for the header element, should look like a hamburger menu\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HamburgerMenu = _ref => {\n  _s();\n\n  let {\n    tabs\n  } = _ref;\n  const [isOpen, changeOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"navSandwichMenu\",\n    onClick: () => changeOpen(!isOpen),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"lineOne\",\n      className: \"hamburgerline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"lineTwo\",\n      className: \"hamburgerline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"sandwichMenu\",\n      style: {\n        opacity: isOpen ? 1 : 0\n      },\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HamburgerMenu, \"ep1wRoW06bPaoDIuVRVXSnmpj80=\");\n\n_c = HamburgerMenu;\nexport default HamburgerMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"HamburgerMenu\");","map":{"version":3,"names":["React","useState","HamburgerMenu","tabs","isOpen","changeOpen","opacity"],"sources":["C:/Users/varun/Desktop/Projects/Github_Page/varunan-vara.github.io/src/Content-Elements/DropDownNav.tsx"],"sourcesContent":["// A dropdown menu for the header element, should look like a hamburger menu\r\n\r\nimport React, { FC, ReactElement, useState } from 'react';\r\n\r\ninterface tabOptions {\r\n    name : string,\r\n    navOp : string,\r\n    // Add more interface options to handle moving the scrollbar to correct point in the page\r\n}\r\n\r\ninterface DropDownMenuOpts {\r\n    tabs : tabOptions[]\r\n}\r\n\r\nconst HamburgerMenu : FC<DropDownMenuOpts> = ({\r\n    tabs\r\n}) : ReactElement => {\r\n    const [isOpen, changeOpen] = useState(false)\r\n\r\n\r\n\r\n    return (\r\n        <div id=\"navSandwichMenu\" onClick={() => changeOpen(!isOpen)} >\r\n            <div id=\"lineOne\" className=\"hamburgerline\"></div>\r\n            <div id=\"lineTwo\" className=\"hamburgerline\"></div>\r\n\r\n            <div id=\"sandwichMenu\" style={{opacity : (isOpen ? 1 : 0)}}> </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HamburgerMenu"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAkCC,QAAlC,QAAkD,OAAlD;;;AAYA,MAAMC,aAAoC,GAAG,QAExB;EAAA;;EAAA,IAFyB;IAC1CC;EAD0C,CAEzB;EACjB,MAAM,CAACC,MAAD,EAASC,UAAT,IAAuBJ,QAAQ,CAAC,KAAD,CAArC;EAIA,oBACI;IAAK,EAAE,EAAC,iBAAR;IAA0B,OAAO,EAAE,MAAMI,UAAU,CAAC,CAACD,MAAF,CAAnD;IAAA,wBACI;MAAK,EAAE,EAAC,SAAR;MAAkB,SAAS,EAAC;IAA5B;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAK,EAAE,EAAC,SAAR;MAAkB,SAAS,EAAC;IAA5B;MAAA;MAAA;MAAA;IAAA,QAFJ,eAII;MAAK,EAAE,EAAC,cAAR;MAAuB,KAAK,EAAE;QAACE,OAAO,EAAIF,MAAM,GAAG,CAAH,GAAO;MAAzB,CAA9B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAQH,CAfD;;GAAMF,a;;KAAAA,a;AAiBN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}