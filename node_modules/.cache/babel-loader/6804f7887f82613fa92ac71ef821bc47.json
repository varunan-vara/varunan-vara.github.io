{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\varun\\\\Desktop\\\\Projects\\\\Github_Page\\\\varunan-vara.github.io\\\\src\\\\Content-Elements\\\\DropDownNav.tsx\",\n    _s = $RefreshSig$();\n\n// A dropdown menu for the header element, should look like a hamburger menu\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HamburgerMenu = _ref => {\n  _s();\n\n  let {\n    tabs,\n    changeval\n  } = _ref;\n  const [isOpen, changeOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"navSandwichMenu\",\n    onClick: () => {\n      changeOpen(!isOpen);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"lineOne\",\n      className: \"hamburgerline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"lineTwo\",\n      className: \"hamburgerline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HamburgerMenu, \"ep1wRoW06bPaoDIuVRVXSnmpj80=\");\n\n_c = HamburgerMenu;\nexport default HamburgerMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"HamburgerMenu\");","map":{"version":3,"names":["React","useState","HamburgerMenu","tabs","changeval","isOpen","changeOpen"],"sources":["C:/Users/varun/Desktop/Projects/Github_Page/varunan-vara.github.io/src/Content-Elements/DropDownNav.tsx"],"sourcesContent":["// A dropdown menu for the header element, should look like a hamburger menu\r\n\r\nimport React, { FC, ReactElement, useState } from 'react';\r\n\r\ninterface tabOptions {\r\n    name : string,\r\n    navOp : string,\r\n    // Add more interface options to handle moving the scrollbar to correct point in the page\r\n}\r\n\r\ninterface DropDownMenuOpts {\r\n    tabs : tabOptions[],\r\n    changeval : boolean\r\n}\r\n\r\nconst HamburgerMenu : FC<DropDownMenuOpts> = ({\r\n    tabs, changeval\r\n}) : ReactElement => {\r\n    const [isOpen, changeOpen] = useState(false)\r\n\r\n\r\n\r\n    return (\r\n        <div id=\"navSandwichMenu\" onClick={() => {\r\n            changeOpen(!isOpen)\r\n            \r\n            }} >\r\n            <div id=\"lineOne\" className=\"hamburgerline\"></div>\r\n            <div id=\"lineTwo\" className=\"hamburgerline\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HamburgerMenu"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAkCC,QAAlC,QAAkD,OAAlD;;;AAaA,MAAMC,aAAoC,GAAG,QAExB;EAAA;;EAAA,IAFyB;IAC1CC,IAD0C;IACpCC;EADoC,CAEzB;EACjB,MAAM,CAACC,MAAD,EAASC,UAAT,IAAuBL,QAAQ,CAAC,KAAD,CAArC;EAIA,oBACI;IAAK,EAAE,EAAC,iBAAR;IAA0B,OAAO,EAAE,MAAM;MACrCK,UAAU,CAAC,CAACD,MAAF,CAAV;IAEC,CAHL;IAAA,wBAII;MAAK,EAAE,EAAC,SAAR;MAAkB,SAAS,EAAC;IAA5B;MAAA;MAAA;MAAA;IAAA,QAJJ,eAKI;MAAK,EAAE,EAAC,SAAR;MAAkB,SAAS,EAAC;IAA5B;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AASH,CAhBD;;GAAMH,a;;KAAAA,a;AAkBN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}